version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: isp-billing-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage/logs:/var/www/storage/logs
      - ./storage/app:/var/www/storage/app
      - ./storage/framework:/var/www/storage/framework
      - ./bootstrap/cache:/var/www/bootstrap/cache
    networks:
      - isp-billing

  node:
    image: node:16
    container_name: isp-billing-node
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - isp-billing
    command: npm run watch

  webserver:
    image: nginx:alpine
    container_name: isp-billing-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
      - ./storage/logs/nginx:/var/log/nginx
    networks:
      - isp-billing
    depends_on:
      - app

  db:
    image: postgres:13
    container_name: isp-billing-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hplinkbilling
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./docker-compose/postgres:/docker-entrypoint-initdb.d
      - ./storage/db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - isp-billing

  redis:
    image: redis:alpine
    container_name: isp-billing-redis
    restart: unless-stopped
    volumes:
      - ./storage/redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - isp-billing

networks:
  isp-billing:
    driver: bridge